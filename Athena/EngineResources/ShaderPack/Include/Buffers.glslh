//////////////////////// Athena common buffers ////////////////////////

layout(std140, set = 1, binding = 0) uniform u_CameraData
{
	mat4 View;
    mat4 InverseView;
    mat4 Projection;
    mat4 InverseProjection;
    mat4 ViewProjection;
    mat4 InverseViewProjection; // no translation
    vec3 Position;
    float NearClip;
    float FarClip;
    float FOV;
    vec2 _Pad0;
    vec4 ProjInfo;
} u_Camera;

layout(std140, set = 1, binding = 1) uniform u_RendererData
{
    vec2 ViewportSize;
    vec2 InverseViewportSize;
    ivec4 ViewportTilesCount;  // xy - per width and height, z - all tiles, w - empty 
    float EnvironmentIntensity;
    float EnvironmentLOD;
    int DebugShadowCascades;
    int DebugLightComplexity;
} u_Renderer;


layout(std430, set = 1, binding = 4) readonly buffer u_BonesData
{
    mat4 g_Bones[];
};

mat4 GetBonesTransform(uint bonesOffset, ivec4 boneIDs, vec4 weights)
{
    mat4 bonesTransform = g_Bones[bonesOffset + boneIDs[0]] * weights[0];
    for(int i = 1; i < MAX_NUM_BONES_PER_VERTEX; ++i)
    {
        bonesTransform += g_Bones[bonesOffset + boneIDs[i]] * weights[i];
    }

    return bonesTransform;
}

mat4 GetTransform(vec3 row0, vec3 row1, vec3 row2, vec3 row3)
{
    return mat4(row0.x, row0.y, row0.z, 0, 
                row1.x, row1.y, row1.z, 0, 
                row2.x, row2.y, row2.z, 0,
                row3.x, row3.y, row3.z, 1);
}
